declare module '@ram-stack/context' {
  export type PickInjectedDependencies<K> = Pick<InjectedDependencies, K>;

  type InferProps<C> = C extends import('react').ComponentType<infer P> ? P : never;
  // Omit taken from https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-8.html
  type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;

  type WrappedComponent<T> = import('react').ComponentClass<Omit<InferProps<T>, keyof InjectedDependencies>, any>;

  export type InjectedDependencies = {
<%= top.map(v => '    ' + v).join(',\n') %>,
    Shell: Shell,
  };

  type Shell = {
<%= shell.map(v => '    ' + v).join(',\n') %>,
  };
}
