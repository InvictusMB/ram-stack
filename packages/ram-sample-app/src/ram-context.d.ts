/* This file was automatically generated by template-emitter plugin */
/* See composition-config in ./src/ */

declare module '@ram-stack/context' {
  export type PickInjectedDependencies<K> = Pick<InjectedDependencies, K>;

  type InferProps<C> = C extends import('react').ComponentType<infer P> ? P : never;
  // Omit taken from https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-8.html
  type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;
  type OwnKeys<T, K> = Extract<K, keyof T>;
  // WithOptional inspired by https://github.com/Microsoft/TypeScript/issues/25760#issuecomment-405931434
  type WithOptional<T, K> = Omit<T, OwnKeys<T, K>> & Partial<Pick<T, OwnKeys<T, K>>>;

  type WrappedComponent<T> =
    import('react').ComponentClass<WithOptional<InferProps<T>, keyof InjectedDependencies>, any>;

  export type InjectedDependencies = {
    ApiService: typeof import('./api.service').ApiService,
    AppStore: typeof import('./app/app.store').AppStore,
    SessionStore: typeof import('./user/session.store').SessionStore,
    UserProfileStore: typeof import('./user/userProfile.store').UserProfileStore,
    apiService: import('./api.service').ApiService,
    appStore: import('./app/app.store').AppStore,
    sessionStore: import('./user/session.store').SessionStore,
    userProfileStore: import('./user/userProfile.store').UserProfileStore,
    Shell: Shell,
  };

  type Shell = {
    AppStateView: WrappedComponent<typeof import('./app/app-state.view').AppStateView>,
    AppView: WrappedComponent<typeof import('./app/app.view').AppView>,
    Button: WrappedComponent<typeof import('./components/button.component').Button>,
    ProfilePage: WrappedComponent<typeof import('./user/profile.page').ProfilePage>,
  };
}
