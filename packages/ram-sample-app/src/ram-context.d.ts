/* This file was automatically generated by template-emitter plugin */
/* See composition-config in ./src/ */

type PickInjected<K> = import('@ram-stack/context').PickInjected<K>;

namespace Injected {
  export const ApiService = 'ApiService' as const;
  export const AppStore = 'AppStore' as const;
  export const SessionStore = 'SessionStore' as const;
  export const UserProfileStore = 'UserProfileStore' as const;
  export const apiService = 'apiService' as const;
  export const appStore = 'appStore' as const;
  export const sessionStore = 'sessionStore' as const;
  export const userProfileStore = 'userProfileStore' as const;
  export const Shell = 'Shell' as const;
  export const ContainerContext = 'ContainerContext' as const;
  export const routerRoot = 'routerRoot' as const;

  namespace classes {
    export * from '@ram-stack/context/classes';
  }
}

declare module '@ram-stack/context/classes' {
  type ApiService = import('./api.service').ApiService;
  type AppStore = import('./app/app.store').AppStore;
  type SessionStore = import('./user/session.store').SessionStore;
  type UserProfileStore = import('./user/user-profile.store').UserProfileStore;
}

declare module '@ram-stack/context' {
  import type {React, WithInjected, RouterRoot} from '@ram-stack/core';

  type PickInjected<K extends (keyof InjectedDependencies)[]> = Pick<InjectedDependencies, K[number]>

  type InjectedDependencies = {
    ApiService: typeof import('./api.service').ApiService,
    AppStore: typeof import('./app/app.store').AppStore,
    SessionStore: typeof import('./user/session.store').SessionStore,
    UserProfileStore: typeof import('./user/user-profile.store').UserProfileStore,
    apiService: import('./api.service').ApiService,
    appStore: import('./app/app.store').AppStore,
    sessionStore: import('./user/session.store').SessionStore,
    userProfileStore: import('./user/user-profile.store').UserProfileStore,
    Shell: Shell,
    ContainerContext: React.Context<import('@ram-stack/core').Container<InjectedDependencies>>,
    routerRoot: RouterRoot,
  };

  type Shell = {
    AppStateView: WithInjected<InjectedDependencies, typeof import('./app/app-state.view').AppStateView>,
    AppView: WithInjected<InjectedDependencies, typeof import('./app/app.view').AppView>,
    Button: WithInjected<InjectedDependencies, typeof import('./components/button.component').Button>,
    CreateScope: WithInjected<InjectedDependencies, typeof import('./components/create-scope.component').CreateScope>,
    HomePage: WithInjected<InjectedDependencies, typeof import('./app/home.page').HomePage> & Page,
    ProgressIndicator: WithInjected<InjectedDependencies, typeof import('./components/progress-indicator.component').ProgressIndicator>,
    RouterView: WithInjected<InjectedDependencies, typeof import('./app/router.view').RouterView>,
    Spoiler: WithInjected<InjectedDependencies, typeof import('./components/spoiler.component').Spoiler>,
    UserGreetingPage: WithInjected<InjectedDependencies, typeof import('./user/user-greeting.page').UserGreetingPage> & Page,
    UserGreetingView: WithInjected<InjectedDependencies, typeof import('./user/user-greeting.view').UserGreetingView>,
    UserProfilePage: WithInjected<InjectedDependencies, typeof import('./user/user-profile.page').UserProfilePage> & Page,
  };

  type Page = {
    route: string,
  };
}
